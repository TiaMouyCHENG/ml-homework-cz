1. 为什么要使用thrift来定义接口,有什么好处?
2. thrift的序列化与JSON和XML序列化之间的差异和优劣是什么?
3. 用自己的话描述一下RPC和本地函数调用的关系与区别,请举一个例子进行描述
4. spring bean是什么? 请举例说明
5. junit 的@Before 和 @After有什么用途? 请在你的单元测试中使用一次
6. 阅读以下fb303.thrift的源代码,请描述一下它做了哪些事情?

1. 好处：屏蔽底层通讯细节，只需要关注业务逻辑；标准化：可以跨平台和跨语言
2. xml：文本类型,例如"123"需要传输"1""2""3"三个字节，占空间大；可读性强；可表达复杂结构；
   json:文本类型，空间比xml小；key-value结构，读取解析比xml块
   thrift:二进制类型，空间小；可读性差
3. 远程和本地函数调用本质上都是调用一个函数。但是远程函数调用：本地作为客户端，与远程服务端建立连接，通过client.func()实际上在服务器上调用func()，
   也就是服务器本地调用func()；本地调用：func()。例如调用ls("/downloads/")：rpc调用后显示服务器的download路径，本地调用显示本机的路径。
4. spring bean就是对象，只不过这个对象的创建、初始化、销毁等生命周期不需要你来管理，由spring Ioc container来管理。你只需要在beans.xml里面定义好就行。
   你要用的时候直接getbean('id')就能获得实例化对象。例如: 原来你在多处要创建Hello对象来执行不同的操作，你可以在beans.xml定义一个，设置prototype。
5. junit 测试的执行顺序：before;test;after。before一般用来创建实例,test调用实例方法，after销毁实例。
6. 异步重启/关闭服务；得到服务运行状态和基本信息，计数和操作信息。

ps